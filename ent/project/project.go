// Code generated by entc, DO NOT EDIT.

package project

const (
	// Label holds the string label denoting the project type in the database.
	Label = "project"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldDomain holds the string denoting the domain field in the database.
	FieldDomain = "domain"
	// FieldDestination holds the string denoting the destination field in the database.
	FieldDestination = "destination"
	// FieldLineID holds the string denoting the line_id field in the database.
	FieldLineID = "line_id"
	// EdgePages holds the string denoting the pages edge name in mutations.
	EdgePages = "pages"
	// Table holds the table name of the project in the database.
	Table = "projects"
	// PagesTable is the table that holds the pages relation/edge.
	PagesTable = "pages"
	// PagesInverseTable is the table name for the Page entity.
	// It exists in this package in order to avoid circular dependency with the "page" package.
	PagesInverseTable = "pages"
	// PagesColumn is the table column denoting the pages relation/edge.
	PagesColumn = "project_pages"
)

// Columns holds all SQL columns for project fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldDomain,
	FieldDestination,
	FieldLineID,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
