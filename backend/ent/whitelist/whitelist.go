// Code generated by entc, DO NOT EDIT.

package whitelist

const (
	// Label holds the string label denoting the whitelist type in the database.
	Label = "white_list"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldPath holds the string denoting the path field in the database.
	FieldPath = "path"
	// EdgeOwner holds the string denoting the owner edge name in mutations.
	EdgeOwner = "owner"
	// Table holds the table name of the whitelist in the database.
	Table = "white_lists"
	// OwnerTable is the table that holds the owner relation/edge.
	OwnerTable = "white_lists"
	// OwnerInverseTable is the table name for the ServiceProvider entity.
	// It exists in this package in order to avoid circular dependency with the "serviceprovider" package.
	OwnerInverseTable = "service_providers"
	// OwnerColumn is the table column denoting the owner relation/edge.
	OwnerColumn = "service_provider_whitelists"
)

// Columns holds all SQL columns for whitelist fields.
var Columns = []string{
	FieldID,
	FieldPath,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "white_lists"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"service_provider_whitelists",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
