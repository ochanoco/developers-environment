// Code generated by ent, DO NOT EDIT.

package serviceprovider

const (
	// Label holds the string label denoting the serviceprovider type in the database.
	Label = "service_provider"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldHost holds the string denoting the host field in the database.
	FieldHost = "host"
	// FieldDestinationIP holds the string denoting the destination_ip field in the database.
	FieldDestinationIP = "destination_ip"
	// EdgeWhitelists holds the string denoting the whitelists edge name in mutations.
	EdgeWhitelists = "whitelists"
	// EdgeAuthorizationCodes holds the string denoting the authorization_codes edge name in mutations.
	EdgeAuthorizationCodes = "authorization_codes"
	// Table holds the table name of the serviceprovider in the database.
	Table = "service_providers"
	// WhitelistsTable is the table that holds the whitelists relation/edge.
	WhitelistsTable = "white_lists"
	// WhitelistsInverseTable is the table name for the WhiteList entity.
	// It exists in this package in order to avoid circular dependency with the "whitelist" package.
	WhitelistsInverseTable = "white_lists"
	// WhitelistsColumn is the table column denoting the whitelists relation/edge.
	WhitelistsColumn = "service_provider_whitelists"
	// AuthorizationCodesTable is the table that holds the authorization_codes relation/edge.
	AuthorizationCodesTable = "authorization_codes"
	// AuthorizationCodesInverseTable is the table name for the AuthorizationCode entity.
	// It exists in this package in order to avoid circular dependency with the "authorizationcode" package.
	AuthorizationCodesInverseTable = "authorization_codes"
	// AuthorizationCodesColumn is the table column denoting the authorization_codes relation/edge.
	AuthorizationCodesColumn = "service_provider_authorization_codes"
)

// Columns holds all SQL columns for serviceprovider fields.
var Columns = []string{
	FieldID,
	FieldHost,
	FieldDestinationIP,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
